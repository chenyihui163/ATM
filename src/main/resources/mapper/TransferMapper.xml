<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atm.dao.TransferMapper" >
  <resultMap id="BaseResultMap" type="com.atm.entity.Transfer" >
    <id column="tId" property="tid" jdbcType="INTEGER" />
    <result column="senderId" property="senderid" jdbcType="INTEGER" />
    <result column="receiverId" property="receiverid" jdbcType="INTEGER" />
    <result column="transfer_Time" property="transferTime" jdbcType="TIMESTAMP" />
    <result column="transfer_Money" property="transferMoney" jdbcType="INTEGER" />
    <result column="State" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    tId, senderId, receiverId, transfer_Time, transfer_Money, State
  </sql>
  
  <select id="queryTop" resultMap="BaseResultMap" parameterType ="Integer" >
  select *
  from transfer t
  where senderId =#{senderid}
  order by  transfer_Time desc 
  limit 0,5
  
  </select>
  
  <select id="queryList" resultMap="BaseResultMap" parameterType="Map">
  select *
  from transfer 
  <where>
			<if test="senderId !=null and  senderId.trim()!='' ">
				and senderId =#{senderId}
			</if>
			<if test="receiverId !=null and  receiverId.trim()!='' ">
				and receiverId =#{receiverId}
			</if>
			<if test="state !=null and  state.trim()!='' ">
				and state =#{state}
			</if>


		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by tId desc
			</otherwise>
		</choose>
		<if test="offset !=null and limit !=null">
			limit #{offset},#{limit}
		</if>
  
  </select>
  
  <select id="queryTotal" resultType="java.lang.Integer"
		parameterType="Map">
		select count(*) from transfer
		<where>
			
			<if test="senderId !=null and  senderId.trim()!='' ">
				and senderId =#{senderId}
			</if>
			<if test="receiverId !=null and  receiverId.trim()!='' ">
				and receiverId =#{receiverId}
			</if>
			<if test="state !=null and  state.trim()!='' ">
				and state =#{state}
			</if>

		</where>
	</select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from transfer
    where tId = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from transfer
    where tId = #{tid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atm.entity.Transfer" useGeneratedKeys="true" keyProperty="tId">
    insert into transfer (senderId, receiverId, 
      transfer_Time, transfer_Money, State
      )
    values (#{senderid,jdbcType=INTEGER}, #{receiverid,jdbcType=INTEGER}, 
      #{transferTime,jdbcType=TIMESTAMP}, #{transferMoney,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atm.entity.Transfer" useGeneratedKeys="true" keyProperty="tId">
    insert into transfer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tId,
      </if>
      <if test="senderid != null" >
        senderId,
      </if>
      <if test="receiverid != null" >
        receiverId,
      </if>
      <if test="transferTime != null" >
        transfer_Time,
      </if>
      <if test="transferMoney != null" >
        transfer_Money,
      </if>
      <if test="state != null" >
        State,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="senderid != null" >
        #{senderid,jdbcType=INTEGER},
      </if>
      <if test="receiverid != null" >
        #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="transferTime != null" >
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferMoney != null" >
        #{transferMoney,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
      1
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atm.entity.Transfer" >
    update transfer
    <set >
      <if test="senderid != null" >
        senderId = #{senderid,jdbcType=INTEGER},
      </if>
      <if test="receiverid != null" >
        receiverId = #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="transferTime != null" >
        transfer_Time = #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferMoney != null" >
        transfer_Money = #{transferMoney,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where tId = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atm.entity.Transfer" >
    update transfer
    set senderId = #{senderid,jdbcType=INTEGER},
      receiverId = #{receiverid,jdbcType=INTEGER},
      transfer_Time = #{transferTime,jdbcType=TIMESTAMP},
      transfer_Money = #{transferMoney,jdbcType=INTEGER},
      State = #{state,jdbcType=INTEGER}
    where tId = #{tid,jdbcType=INTEGER}
  </update>
</mapper>