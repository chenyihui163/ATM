<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atm.dao.CardMapper">
	<resultMap id="BaseResultMap" type="com.atm.entity.Card">
		<id column="cardId" property="cardid" jdbcType="INTEGER" />
		<result column="cardType" property="cardtype" jdbcType="VARCHAR" />
		<result column="cardDescription" property="carddescription"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="cardResultMap" type="com.atm.entity.Card">
		<id column="cardId" property="cardid" jdbcType="INTEGER" />
		<result column="cardType" property="cardtype" jdbcType="VARCHAR" />
		<result column="cardDescription" property="carddescription"
			jdbcType="VARCHAR" />
	
	</resultMap>

	<sql id="Base_Column_List">
		cardId, cardType, cardDescription
	</sql>

  
    
	<select id="selectAccountbyCard" resultMap="cardResultMap"
		parameterType="java.lang.Integer">
		select *
		from card c
		where cardId = #{cardid,jdbcType=INTEGER}

	</select>

	<select id="queryList" resultMap="BaseResultMap" parameterType="Map">

		select * from card
		<where>
			<if test="cardId !=null and  cardId.trim()!='' ">
				and cardId like
				concat('%',#{cardId},'%')
			</if>
		
			<if test="cardDescription !=null and  cardDescription.trim()!='' ">
				and cardDescription like
				concat('%',#{cardDescription},'%')
			</if>

		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by cardId desc
			</otherwise>
		</choose>
		<if test="offset !=null and limit !=null">
			limit #{offset},#{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="java.lang.Integer"
		parameterType="Map">
		select count(*) from card
		<where>
			<if test="cardId !=null and  cardId.trim()!='' ">
				and cardId like
				concat('%',#{cardId},'%')
			</if>
			
			<if test="cardDescription !=null and  cardDescription.trim()!='' ">
				and cardDescription like
				concat('%',#{cardDescription},'%')
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from card
		where cardId = #{cardid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from card
		where cardId = #{cardid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.atm.entity.Card"
		useGeneratedKeys="true" keyProperty="cardId">
		insert into card ( cardType,
		cardDescription
		)
		values (#{cardtype,jdbcType=VARCHAR},
		#{carddescription,jdbcType=VARCHAR}
	</insert>
	<insert id="insertSelective" parameterType="com.atm.entity.Card"  useGeneratedKeys="true" keyProperty="cardId">
		insert into card
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cardid != null">
				cardId,
			</if>
			<if test="cardtype != null">
				cardType,
			</if>
			<if test="carddescription != null">
				cardDescription,
			</if>
		
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cardid != null">
				#{cardid,jdbcType=INTEGER},
			</if>
			<if test="cardtype != null">
				#{cardtype,jdbcType=VARCHAR},
			</if>
			<if test="carddescription != null">
				#{carddescription,jdbcType=VARCHAR},
			</if>
			
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.atm.entity.Card">
		update card
		<set>
			<if test="cardtype != null">
				cardType = #{cardType,jdbcType=VARCHAR},
			</if>
			<if test="carddescription != null">
				cardDescription = #{carddescription,jdbcType=VARCHAR},
			</if>
			
		</set>
		where cardId = #{cardid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.atm.entity.Card">
		update card
		set
		cardType = #{cardtype,jdbcType=VARCHAR},
		cardDescription =
		#{carddescription,jdbcType=VARCHAR}
		where cardId = #{cardid,jdbcType=INTEGER}
	</update>
</mapper>